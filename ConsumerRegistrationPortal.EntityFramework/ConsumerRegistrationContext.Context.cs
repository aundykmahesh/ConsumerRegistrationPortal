//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsumerRegistrationPortal.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ConsumerRegistrationEntities : DbContext
    {
        public ConsumerRegistrationEntities()
            : base("name=ConsumerRegistrationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Campaign> Campaigns { get; set; }
        public virtual DbSet<Client_StoredProcedures> Client_StoredProcedures { get; set; }
        public virtual DbSet<Client_StoredProcedures_attr> Client_StoredProcedures_attr { get; set; }
        public virtual DbSet<Client_TestCampaign> Client_TestCampaign { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<Color> Colors { get; set; }
        public virtual DbSet<ColorText> ColorTexts { get; set; }
        public virtual DbSet<ConsentMaster> ConsentMasters { get; set; }
        public virtual DbSet<ConsumerEmail> ConsumerEmails { get; set; }
        public virtual DbSet<ConsumerImport> ConsumerImports { get; set; }
        public virtual DbSet<ConsumerReference> ConsumerReferences { get; set; }
        public virtual DbSet<Consumer> Consumers { get; set; }
        public virtual DbSet<Correspondence> Correspondences { get; set; }
        public virtual DbSet<EMailVerificationStatusMaster> EMailVerificationStatusMasters { get; set; }
        public virtual DbSet<HTMLMaster> HTMLMasters { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<ImagesDetail> ImagesDetails { get; set; }
        public virtual DbSet<Log> Logs { get; set; }
        public virtual DbSet<RegistrationLog> RegistrationLogs { get; set; }
        public virtual DbSet<RegistrationStatusMaster> RegistrationStatusMasters { get; set; }
        public virtual DbSet<Terminology> Terminologies { get; set; }
        public virtual DbSet<TerminologiesDetail> TerminologiesDetails { get; set; }
        public virtual DbSet<TermsAndCondition> TermsAndConditions { get; set; }
        public virtual DbSet<UserCampaignMapping> UserCampaignMappings { get; set; }
        public virtual DbSet<ValidationMaster> ValidationMasters { get; set; }
        public virtual DbSet<SPAttribute> SPAttributes { get; set; }
    
        public virtual int PerformMatch(string attributes, Nullable<long> campaignId)
        {
            var attributesParameter = attributes != null ?
                new ObjectParameter("attributes", attributes) :
                new ObjectParameter("attributes", typeof(string));
    
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("campaignId", campaignId) :
                new ObjectParameter("campaignId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PerformMatch", attributesParameter, campaignIdParameter);
        }
    }
}
